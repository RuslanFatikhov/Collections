# Collections - Пример файла переменных окружения
# Скопируйте этот файл как .env и заполните значения

# ========================================
# ОСНОВНЫЕ НАСТРОЙКИ
# ========================================

# Режим запуска (development/testing/production)
FLASK_ENV=development

# Секретный ключ для сессий и CSRF (ОБЯЗАТЕЛЬНО измените в продакшне!)
# Минимум 64 символа для безопасности
SECRET_KEY=your-super-secret-key-change-in-production-64-chars-minimum

# URL базы данных
# Для разработки - SQLite (по умолчанию)
DATABASE_URL=sqlite:///collections.db
# Для продакшна - PostgreSQL
# DATABASE_URL=postgresql://username:password@localhost:5432/collections

# Базовый URL приложения
BASE_URL=http://localhost:5000

# ========================================
# НАСТРОЙКИ СЕРВЕРА
# ========================================

# Хост и порт для Flask
HOST=127.0.0.1
PORT=5000

# Принудительное использование HTTPS в продакшне
FORCE_HTTPS=false

# ========================================
# OAUTH НАСТРОЙКИ
# ========================================

# Google OAuth 2.0
# Получите на https://console.cloud.google.com/
# Redirect URI: http://localhost:5000/auth/google/callback
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret

# Apple Sign In
# Получите на https://developer.apple.com/
# Redirect URI: http://localhost:5000/auth/apple/callback
APPLE_CLIENT_ID=com.yourcompany.collections
APPLE_CLIENT_SECRET=your-apple-client-secret
APPLE_KEY_ID=your-apple-key-id
APPLE_TEAM_ID=your-apple-team-id
# Путь к файлу ключа или содержимое ключа
APPLE_PRIVATE_KEY=/path/to/AuthKey_XXXXX.p8

# ========================================
# БЕЗОПАСНОСТЬ И RATE LIMITING
# ========================================

# Rate limiting (запросов в час)
RATE_LIMIT_ANONYMOUS=100
RATE_LIMIT_AUTHENTICATED=1000
RATE_LIMIT_ADMIN=5000

# Настройки сессий
SESSION_LIFETIME_DAYS=30
SESSION_COOKIE_SAMESITE=Lax
SESSION_COOKIE_HTTPONLY=true

# Настройки CSRF защиты
WTF_CSRF_ENABLED=true
WTF_CSRF_TIME_LIMIT=3600

# ========================================
# НАСТРОЙКИ ФАЙЛОВ И ЗАГРУЗОК
# ========================================

# Директория для загрузок (относительно корня проекта)
UPLOAD_FOLDER=frontend/static/uploads

# Максимальный размер загружаемого файла (в байтах)
# 10MB = 10 * 1024 * 1024
MAX_CONTENT_LENGTH=10485760

# Разрешенные расширения файлов (через запятую)
ALLOWED_EXTENSIONS=png,jpg,jpeg,gif,webp

# Автоматическая оптимизация изображений
IMAGE_OPTIMIZATION=true
IMAGE_QUALITY=85
AUTO_GENERATE_THUMBNAILS=true

# Размеры thumbnails (в пикселях)
THUMBNAIL_SIZES=200x200,400x400,800x800

# ========================================
# ПРОДАКШН НАСТРОЙКИ
# ========================================

# Использовать S3-совместимое хранилище (true/false)
USE_S3=false

# Настройки S3 (для Timeweb Object Storage или AWS S3)
S3_BUCKET=your-bucket-name
S3_ACCESS_KEY=your-s3-access-key
S3_SECRET_KEY=your-s3-secret-key
S3_ENDPOINT=https://s3.timeweb.com
S3_REGION=ru-1

# CDN настройки (для ускорения загрузки статики)
CDN_DOMAIN=cdn.yoursite.com
USE_CDN=false

# ========================================
# ЛОГИРОВАНИЕ И МОНИТОРИНГ
# ========================================

# Уровень логирования (DEBUG/INFO/WARNING/ERROR)
LOG_LEVEL=INFO

# Файлы логов (относительно backend/)
LOG_FILE=logs/app.log
UPLOAD_LOG_FILE=logs/uploads.log
SECURITY_LOG_FILE=logs/security.log
AUDIT_LOG_FILE=logs/audit.log

# Ротация логов
LOG_MAX_SIZE=10485760  # 10MB
LOG_BACKUP_COUNT=5

# Аудит логирование
AUDIT_ENABLED=true
AUDIT_SENSITIVE_DATA=false  # Логировать ли чувствительные данные

# ========================================
# УВЕДОМЛЕНИЯ И ИНТЕГРАЦИИ
# ========================================

# Email настройки (для уведомлений)
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=true
MAIL_USERNAME=your-email@gmail.com
MAIL_PASSWORD=your-app-password
MAIL_DEFAULT_SENDER=noreply@yoursite.com

# Уведомления администраторам
ADMIN_EMAIL_NOTIFICATIONS=true
ADMIN_EMAIL=admin@yoursite.com

# Webhook для уведомлений (например, Slack)
WEBHOOK_URL=https://hooks.slack.com/services/...
WEBHOOK_ENABLED=false

# ========================================
# ПРОИЗВОДИТЕЛЬНОСТЬ И КЭШИРОВАНИЕ
# ========================================

# Включить отладку SQL запросов (только для разработки!)
SQLALCHEMY_ECHO=false

# Database connection pool
SQLALCHEMY_POOL_SIZE=10
SQLALCHEMY_POOL_RECYCLE=3600

# Кэширование
CACHE_TYPE=simple  # simple/redis/memcached
CACHE_DEFAULT_TIMEOUT=300

# Redis настройки (если используется)
REDIS_URL=redis://localhost:6379/0
REDIS_CACHE_DB=1

# ========================================
# ЛИМИТЫ И ОГРАНИЧЕНИЯ
# ========================================

# Лимиты на пользователя
MAX_COLLECTIONS_PER_USER=100
MAX_ITEMS_PER_COLLECTION=1000
MAX_CUSTOM_FIELDS=20

# Лимиты контента
MAX_COLLECTION_NAME_LENGTH=255
MAX_COLLECTION_DESCRIPTION_LENGTH=2000
MAX_ITEM_NAME_LENGTH=255

# Лимиты изображений
MAX_IMAGE_WIDTH=4096
MAX_IMAGE_HEIGHT=4096
MIN_IMAGE_WIDTH=50
MIN_IMAGE_HEIGHT=50

# ========================================
# ФУНКЦИОНАЛЬНОСТЬ
# ========================================

# Включить регистрацию новых пользователей
ALLOW_REGISTRATION=true

# Включить публичные коллекции
ALLOW_PUBLIC_COLLECTIONS=true

# Включить экспорт данных
ALLOW_DATA_EXPORT=true

# Включить импорт данных
ALLOW_DATA_IMPORT=true

# Модерация контента
CONTENT_MODERATION=false
AUTO_APPROVE_COLLECTIONS=true

# ========================================
# АНАЛИТИКА И МЕТРИКИ
# ========================================

# Google Analytics
GA_TRACKING_ID=UA-XXXXXXXXX-X
GA_ENABLED=false

# Яндекс.Метрика
YM_COUNTER_ID=XXXXXXXX
YM_ENABLED=false

# Внутренняя аналитика
INTERNAL_ANALYTICS=true
TRACK_USER_ACTIONS=true
TRACK_API_USAGE=true

# ========================================
# РАЗРАБОТКА И ТЕСТИРОВАНИЕ
# ========================================

# Включить профилирование (только для разработки!)
PROFILING_ENABLED=false

# Тестовые данные
CREATE_TEST_DATA_ON_STARTUP=false
TEST_USER_EMAIL=test@example.com

# Mock OAuth для тестирования
MOCK_OAUTH=false
MOCK_GOOGLE_USER={"email": "test@gmail.com", "name": "Test User"}

# Включить CORS для фронтенд разработки
CORS_ENABLED=false
CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# ========================================
# РЕЗЕРВНОЕ КОПИРОВАНИЕ
# ========================================

# Автоматические бэкапы
AUTO_BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *  # Каждый день в 2:00
BACKUP_RETENTION_DAYS=30

# S3 для бэкапов
BACKUP_S3_BUCKET=your-backup-bucket
BACKUP_S3_ACCESS_KEY=your-backup-access-key
BACKUP_S3_SECRET_KEY=your-backup-secret-key

# ========================================
# ДОПОЛНИТЕЛЬНЫЕ ИНТЕГРАЦИИ
# ========================================

# Telegram бот для уведомлений
TELEGRAM_BOT_TOKEN=your-bot-token
TELEGRAM_CHAT_ID=your-chat-id
TELEGRAM_ENABLED=false

# Sentry для отслеживания ошибок
SENTRY_DSN=https://xxxxx@sentry.io/xxxxx
SENTRY_ENABLED=false

# New Relic для мониторинга
NEW_RELIC_LICENSE_KEY=your-license-key
NEW_RELIC_APP_NAME=Collections
NEW_RELIC_ENABLED=false

# ========================================
# ИНСТРУКЦИИ ПО НАСТРОЙКЕ
# ========================================

# БЫСТРЫЙ СТАРТ:
# 1. Скопируйте этот файл: cp .env.example .env
# 2. Измените SECRET_KEY на уникальное значение (минимум 64 символа)
# 3. Для OAuth авторизации настройте GOOGLE_CLIENT_ID и GOOGLE_CLIENT_SECRET
# 4. Запустите инициализацию: python backend/init_db.py --sample-data --admin
# 5. Запустите приложение: cd backend && python run.py

# ДЛЯ ПРОДАКШНА:
# 1. Измените FLASK_ENV на production
# 2. Настройте PostgreSQL в DATABASE_URL
# 3. Установите FORCE_HTTPS=true
# 4. Настройте S3 для хранения файлов (USE_S3=true)
# 5. Настройте мониторинг (Sentry, New Relic)
# 6. Настройте резервное копирование
# 7. Проверьте безопасность: python backend/run.py security-check

# БЕЗОПАСНОСТЬ:
# - Никогда не используйте значения по умолчанию в продакшне
# - Регулярно обновляйте SECRET_KEY
# - Используйте сильные пароли для всех сервисов
# - Ограничьте доступ к .env файлу (chmod 600 .env)
# - Никогда не коммитьте .env в git# Collections - Пример файла переменных окружения
# Скопируйте этот файл как .env и заполните значения

# ========================================
# ОСНОВНЫЕ НАСТРОЙКИ
# ========================================

# Режим запуска (development/testing/production)
FLASK_ENV=development

# Секретный ключ для сессий и CSRF (ОБЯЗАТЕЛЬНО измените в продакшне!)
SECRET_KEY=your-super-secret-key-change-in-production

# URL базы данных
# Для разработки - SQLite (по умолчанию)
DATABASE_URL=sqlite:///collections.db
# Для продакшна - PostgreSQL
# DATABASE_URL=postgresql://username:password@localhost:5432/collections

# Базовый URL приложения
BASE_URL=http://localhost:5000

# ========================================
# НАСТРОЙКИ СЕРВЕРА
# ========================================

# Хост и порт для Flask
FLASK_HOST=127.0.0.1
FLASK_PORT=5000

# Уровень логирования (DEBUG/INFO/WARNING/ERROR)
LOG_LEVEL=INFO

# Файл для логов (оставьте пустым для вывода в консоль)
LOG_FILE=logs/collections.log

# ========================================
# OAUTH НАСТРОЙКИ
# ========================================

# Google OAuth 2.0
# Получите на https://console.cloud.google.com/
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret

# Apple Sign In
# Получите на https://developer.apple.com/
APPLE_CLIENT_ID=com.yourcompany.collections
APPLE_CLIENT_SECRET=your-apple-client-secret
APPLE_KEY_ID=your-apple-key-id
APPLE_TEAM_ID=your-apple-team-id
APPLE_PRIVATE_KEY=path/to/your/apple/private/key.p8

# ========================================
# НАСТРОЙКИ ФАЙЛОВ
# ========================================

# Максимальный размер загружаемого файла (в байтах)
# 10MB = 10 * 1024 * 1024
MAX_CONTENT_LENGTH=10485760

# Разрешенные расширения файлов (через запятую)
ALLOWED_EXTENSIONS=png,jpg,jpeg,gif,webp

# ========================================
# ПРОДАКШН НАСТРОЙКИ
# ========================================

# Использовать S3-совместимое хранилище (true/false)
USE_S3=false

# Настройки S3 (для Timeweb Object Storage или AWS S3)
S3_BUCKET=your-bucket-name
S3_ACCESS_KEY=your-s3-access-key
S3_SECRET_KEY=your-s3-secret-key
S3_ENDPOINT=https://s3.timeweb.com
S3_REGION=ru-1

# ========================================
# БЕЗОПАСНОСТЬ
# ========================================

# Принудительное использование HTTPS (true для продакшна)
FORCE_HTTPS=false

# Строгая политика cookies (Strict/Lax/None)
SESSION_COOKIE_SAMESITE=Lax

# Время жизни сессии в днях
SESSION_LIFETIME_DAYS=30

# ========================================
# ДОПОЛНИТЕЛЬНЫЕ НАСТРОЙКИ
# ========================================

# Включить отладку SQL запросов (true/false)
SQLALCHEMY_ECHO=false

# Количество элементов на странице по умолчанию
DEFAULT_PAGE_SIZE=20

# Максимальное количество кастомных полей в коллекции
MAX_CUSTOM_FIELDS=20

# ========================================
# ИНСТРУКЦИИ ПО НАСТРОЙКЕ
# ========================================

# 1. Скопируйте этот файл: cp .env.example .env
# 2. Измените SECRET_KEY на уникальное значение
# 3. Настройте OAuth (см. README.md)
# 4. Для продакшна:
#    - Измените FLASK_ENV на production
#    - Настройте PostgreSQL в DATABASE_URL
#    - Установите FORCE_HTTPS=true
#    - Настройте S3 для хранения файлов
# 5. Запустите инициализацию: python backend/init_db.py --sample-data